name: CI/CD extra task

on:
  push:
    branches:
      - main
      - master

env:
  EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  test-build-push:
    name: test build and push image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Log in to GitHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push image
        id: build-and-push
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${REPO_NAME}/silly-demo"
          GIT_SHORT_HASH=$(git rev-parse --short HEAD)
          TAG=${{ github.run_number }}-${GIT_SHORT_HASH}
          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

  deploy:
    name: deploy chart to AWS
    needs: test-build-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: SSH set up
      run: |
        echo "$EC2_SSH_KEY" > ~/key.pem
        chmod 600 ~/key.pem

    - name: Deploy chart
      run: |
        ssh -T -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i ~/key.pem ubuntu@$EC2_PUBLIC_IP << 'EOF'
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          cd golang-demo
          git pull
          sudo helm upgrade --install silly-demo ./golang-demo-chart --set image.repository=ghcr.io/${{ github.repository }}/silly-demo --set image.tag=${{ env.IMAGE_TAG }}
        EOF
